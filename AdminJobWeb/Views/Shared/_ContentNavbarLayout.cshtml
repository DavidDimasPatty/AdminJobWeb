@await Html.PartialAsync("Sections/_Variables")
@{
    // TempData.Keep();

    Layout = "_CommonMasterLayout";

    ViewData["contentNavbar"] = true;
    @* Display elements *@
    ViewData["isNavbar"] = (ViewData["isNavbar"] ??= true);

    ViewData["isMenu"] = (ViewData["isMenu"] ??= true);

    ViewData["isFlex"] = (ViewData["isFlex"] ??= false);

    ViewData["isFooter"] = (ViewData["isFooter"] ??= true);
    @* ViewData["customizerHidden"] = (ViewData["customizerHidden"] ??= "customizer-hide"); *@

    @*HTML Classes *@
    ViewData["navbarDetached"] = (ViewData["navbarDetached"] ?? "navbar-detached");

    @*Content classes *@

    ViewData["container"] = (ViewData["container"] ?? "container-xxl");

    var idle = 5;
    ViewData["containerNav"] = (ViewData["containerNav"] ?? "container-xxl");
}

@section VendorStyles {
    @RenderSection("VendorStyles", required: false)
}

@section PageStyles {
    @RenderSection("PageStyles", required: false)
}

@section VendorScripts {
    @RenderSection("VendorScripts", required: false)
}

@section PageScripts {
    @RenderSection("PageScripts", required: false)
}

@{
    bool isMenu = ViewData["isMenu"] != null && Convert.ToBoolean(ViewData["isMenu"]);
}

<div class='layout-wrapper layout-content-navbar @(isMenu ? "" : "layout-without-menu")'>
    <div class='layout-container'>

        @if (isMenu)

        {
            @await Html.PartialAsync("Sections/Menu/_VerticalMenu")
        }

        <!-- Layout page -->
        <div class="layout-page">
            <!-- Navbar -->
            @if (@ViewData["isNavbar"] != null && Convert.ToBoolean(@ViewData["isNavbar"]))
            {
                @await Html.PartialAsync("Sections/Navbar/_Navbar")
            }
            <!-- / Navbar -->
            <!-- Content wrapper -->
            <div class="content-wrapper">

                <!-- Content -->
                <div class='@ViewData["container"] @(Convert.ToBoolean(@ViewData["isFlex"]) ? "d-flex align-items-stretch flex-grow-1 p-0" : "flex-grow-1 container-p-y")'>
                    @RenderBody()
                </div>
                <!-- / Content -->
                <!-- Footer -->
                @if (@ViewData["isFooter"] != null && Convert.ToBoolean(@ViewData["isFooter"]))















                {
                    @await Html.PartialAsync("Sections/Footer/_Footer")
                }
                <!-- / Footer -->
                <div class="content-backdrop fade"></div>
            </div>
            <!--/ Content wrapper -->
        </div>
        <!-- / Layout page -->
    </div>

    <!-- Overlay -->
    @if (@ViewData["isMenu"] != null && Convert.ToBoolean(@ViewData["isMenu"]))

    {
        <div class="layout-overlay layout-menu-toggle"></div>
    }
    <!-- Drag Target Area To SlideIn Menu On Small Screens -->
    <div class="drag-target"></div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.js" integrity="sha512-+k1pnlgt4F1H8L7t3z95o3/KO+o78INEcXTbnoJQ/F2VqDVhWoaiVml/OEHv9HsVgxUaVW+IbiZPUJQfF/YxZw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    @if (TempData["icon"] != null)
    {
        <text>
                Swal.fire({
                    title: '@TempData["titlePopUp"]',
                    text: '@TempData["text"]',
                    icon: '@TempData["icon"]'
                });
        </text>
        TempData.Remove("titlePopUp");
        TempData.Remove("text");
        TempData.Remove("icon");

    }

    var checkIdle = 0;
    $(document).mousemove(function () {
        checkIdle = 0;
    });
    setInterval(checkIdleTimeOut, 60000);
    console.log(checkIdle);
    function checkIdleTimeOut() {
        checkIdle = checkIdle + 1;
        if (checkIdle == "@idle") {
            //alert("Idle " + @idle+" Menit, anda akan diarahkan ke halaman log in!");
            Swal.fire({
                title: 'Sesi Habis',
                text: "Idle " + @idle+" Menit, anda akan diarahkan ke halaman log in!",
                icon: 'error',
                showConfirmButton: false,
                timer: 2000,
                timerProgressBar: true,
                willClose: () => {
                    window.location.href = '/Account/LogOut';
                }
            });
        }
    }
</script>
